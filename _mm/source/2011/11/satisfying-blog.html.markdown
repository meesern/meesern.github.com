--- 
title: "The Worlds Most Satisfying Blogging Platform"
date: 05/11/2011
---

I Only Wanted a Simple Blog
---------------------------

I suppose that it is quite typical.  I set out to start a simple blog to write about the many many interesting things that I get involved with.  Simple - go to [wordpress.com](http://wordpress.com) and voil√†!  A Blog! Great, but I was going to be putting quite a number of code excerpts into the posts and wanted to be sure that syntax highlighting in multiple languages would work.  It's easy with a wordpress plugin but less so on wordpress.com as it does not support custom css/html in the template.  According to [this great guide](http://heisencoder.net/2009/01/adding-syntax-highlighting-to-blogger.html) to syntax highlighting in blogger [Blogger](http://www.blogger.com) does support editing the template HTML and so I created a blog there as well to compare the two. 

Both of these blogs used [SyntaxHighlighter](http://code.google.com/p/syntaxhighlighter/) - a javascript which highlights the code on the viewers browser.  It's a neat idea that works when you can't do anything smart on the server (such as with wordpress.com or Blogger).

So I set out writing a blog post about building [openQwaq](http://code.google.com/p/openqwaq/) - a second-life like immersive collaboration environment.  I have to say it was not very satisfying.  I had to edit in rich text or html with frequent changes between code excerpts and text and both caused problems - line endings either in the edited code or the rendered HTML had a horrible habit of changing - merging whole blocks of text together.  And having to edit in HTML in order to put the `<pre>` and `<code>` blocks in manually made me feel like my fingers were tied with rubber bands.  I realized that I had just expected [textile](http://www.textism.com/tools/textile/) or [markdown](http://daringfireball.net/projects/markdown/syntax) support and it wasn't there.  Perhaps I could send in posts by email instead.  Both Blogger and Wordpress supported this but both used HTML formatted email.  I looked around again and [Tublr](http://www.tumblr.com) seemed good.  I could send markdown formatted emails so I put my blog post into tumbler too.  But the tumblr post editor was a bit pokey and the whole thing had that Microsoft Word feeling about it, like owning a dog that you don't like.

While looking for syntax highlighting for Tumblr I found [google-code-prettify](http://code.google.com/p/google-code-prettify/) which looked like a slightly more elegant version of SyntaxHighlighter although the Ruby support seemed a little half hearted.  More importantly I found Ethan Schoonover's [Solarized](http://ethanschoonover.com/solarized) project.  There is such detailed attention in his development of the Solarized colour pallet for terminal and GUI applications that I really wanted to use it in my blog.  Highlighted text using these colours seems somehow free from a tension that is usually there below the surface. I did notice, however that Ethan's site was generated by as Haskell based static site generator called [Hakyll](http://jaspervdj.be/hakyll/).

I was struck by the simplicity and elegance of static site creation.  There's a lightness to pre-parsing pages and serving only HTML/Javascript.  Everybody who looks at a blog page sees essentially the same thing so why construct the page at each request to the server?  It is good to be free of an ugly crunchy old database.  Having looked at a number of static blogs however there was one conspicuous absence: comments.  A blog without the ability for readers to comment is like whistling into the wind.  It feels isolated from the community.  Clearly commenting on a blog post can not easily be managed if the web server it simply dishing out HTML but there was a reasonable solution in the form of [Diqus](http://disqus.com/) which manages comments by installing a javascript on the page.  It's a nice and well polished system and while it's free for a certain limit of page views I can confidently say that I'm not going to join the entry level and pay Disqus $300 per month for the privilege.  I barley earn that much.  

Disqus uses comment spam protection from the well known [Akismet](http://akismet.com/).  Again they are free for personal use but they have quite a nice voluntary contribution system when you sign up.  If you want to use Akismet without paying you have to move a slider to $0 and endure the smiley face looking sad. 

So with all of that I was sold on the idea of a static site.  Much as I was tempted by the idea of playing with Haskell (there is a nice introduction here <http://tryhaskell.org/>) and liked the look of Hakyll it seemed slightly too simple and I thought that Ruby could offer some more of its loveliness.

Of course the setup process shared the same problem that all simplifying and helpful components share - when they don't work you are stuck.  In this case MiddleMan's documentation showed a stylesheet with `@import "susy"` which would give me a great layout.  I pasted it in as a placeholder for when I came to think about layout but it choked sass.  Turned out it needed me to include the `compass-susy-plugin` gem in the `Gemfile` and install the supporting stylesheets with:

    cd source
    compass create . -r susy -u susy


